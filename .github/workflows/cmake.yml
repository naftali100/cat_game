name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: checkout submodules
      run: |
        git pull --recurse-submodules
        git submodule update --remote --recursive

    - name: Install dependencies on windows
      if: startsWith(matrix.config.os, 'windows')
      run: |
        choco install ninja cmake
        ninja --version
        cmake --version

    - name: setup linux environment
      if: runner.os == 'Linux'
      run: |
        echo install sfml =====================================================================
        sudo apt-get install libsfml-dev
        echo update gcc =====================================================================
        echo gcc version before
        gcc --version
        echo add gcc ppa
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt install build-essential
        sudo apt-get install ninja-build cmake


    - name: Configure CMake
      shell: bash
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G "Ninja"

    - name: Build
      shell: bash
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}